// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WasteDetection.Da;

#nullable disable

namespace WasteDetection.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230425221720_AddTranslateAndPyramidRequestsTables")]
    partial class AddTranslateAndPyramidRequestsTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("WasteDetection.Models.Entities.BuildPyramidsRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("InpLayerPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suceeded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BuildPyramidsRequests");
                });

            modelBuilder.Entity("WasteDetection.Models.Entities.ComputeImageStatisticsRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("InpImgPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutXmlPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suceeded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ComputeImageStatisticsRequests");
                });

            modelBuilder.Entity("WasteDetection.Models.Entities.ImageClassificationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("InpImgPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InpModelPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InpXmlStatisticsPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutConfidenceMapPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutRasterPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suceeded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ImageClassificationRequests");
                });

            modelBuilder.Entity("WasteDetection.Models.Entities.TrainImageClassificatierRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("InpImgPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InpVectorPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InpXmlStatisticsPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabelField")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutConfusionMatrixPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutModelPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suceeded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainingClassifierName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidationVectorPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TrainImageClassificatierRequests");
                });

            modelBuilder.Entity("WasteDetection.Models.Entities.TranslateLayerRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("InpLayerPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutLayerPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Suceeded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TranslateLayerRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
